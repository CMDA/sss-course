<!doctype html>
<html lang="en">

  <head>
    <meta charset="utf-8">

    <title><%= document.title %></title>

    <meta name="description" content="">
    <meta name="author" content="Flurin Egger">

    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

    <link rel="stylesheet" href="/vendor/reveal.js/css/reveal.min.css">
    <link rel="stylesheet" href="/stylesheets/theme.css" id="theme">

    <!-- If the query includes 'print-pdf', use the PDF print sheet -->
    <script>
      if(window.location.search.match( /print-/gi )){
        document.write( '<link rel="stylesheet" href="/vendor/reveal.js/css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css">' );        
      }
    </script>

    <!--[if lt IE 9]>
    <script src="/vendor/reveal.js/lib/js/html5shiv.js"></script>
    <![endif]-->

    <script src="/vendor/reveal.js/lib/js/head.min.js"></script>
  </head>

  <body>
    <div class="reveal">
      <div class="slides">
        <%= yield %>
      </div>
    </div>

    <script src="/vendor/reveal.js/js/reveal.min.js"></script>

    <script>

      // Full list of configuration options available here:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
        controls: true,
        progress: true,
        history: true,
        center: true,

        width: 1000,

        theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
        transition: 'default', // default/cube/page/concave/zoom/linear/fade/none

        // Optional libraries used to extend on reveal.js
        dependencies: [
          { src: 'vendor/reveal.js/lib/js/classList.js', condition: function() { return !document.body.classList; } },
          { src: 'vendor/reveal.js/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'vendor/reveal.js/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'vendor/reveal.js/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
          { src: 'vendor/reveal.js/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
        ]
      });

    </script>
  </body>
</html>